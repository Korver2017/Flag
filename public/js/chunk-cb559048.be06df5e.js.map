{"version":3,"sources":["webpack:///./src/views/milestone-detail.vue?f215","webpack:///./src/views/milestone-detail.vue?fdc5","webpack:///src/views/milestone-detail.vue","webpack:///./src/views/milestone-detail.vue?f603","webpack:///./src/views/milestone-detail.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_milestone_detail_vue_vue_type_style_index_0_id_4e77fadc_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_milestone_detail_vue_vue_type_style_index_0_id_4e77fadc_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","to","name","tag","active-class","_v","_s","orgName","proName","mileTitle","type","on","click","$event","showOpened","opened","length","closed","disabled","checking","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","reopenIssue","closeIssue","_l","mile","index","addIssueTo","mileId","title","aria-hidden","_e","user","assignTo","assigneeId","avatarHash","percentage","style","width","role","aria-valuemin","aria-valuemax","issues","issue","issueOpened","staticStyle","line-height","directives","rawName","value","expression","domProps","issueId","checked","Array","isArray","_i","change","$$a","$$el","target","$$c","$$v","$$i","concat","slice","params","label","hash","src","alt","staticRenderFns","milestone_detailvue_type_script_lang_js_","components","data","username","$store","state","milestones","users","orgId","computed","$route","proId","userId","input","$vmc","mounted","showUser","showProName","showIssue","showMilestone","methods","ary","Issue","parse_default","a","Object","extend","query","Query","equalTo","find","then","resp","_loop","i","obj","object","get","arry","Label","_object","push","labels","toFixed","Project","Org","results","_loop2","Account","email","error","Pro","set","save","Mile","checkedIds","map","item","containedIn","_query","addUnique","addMilestone","alert","message","watch","views_milestone_detailvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-cb559048.be06df5e.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./milestone-detail.vue?vue&type=style&index=0&id=4e77fadc&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./milestone-detail.vue?vue&type=style&index=0&id=4e77fadc&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container my-4\"},[_c('h3',{staticClass:\"my-5 text-left\"},[_c('router-link',{attrs:{\"to\":{ name: 'organization'},\"tag\":\"a\",\"active-class\":\"active\"}},[_c('a',[_vm._v(_vm._s(_vm.orgName))])]),_vm._v(\"\\n     / \\n    \"),_c('router-link',{attrs:{\"to\":{ name: 'project'},\"tag\":\"a\",\"active-class\":\"active\"}},[_c('a',[_vm._v(_vm._s(_vm.proName))])]),_c('h1',{staticClass:\"my-3\"},[_vm._v(_vm._s(_vm.mileTitle))])],1),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"rwo text-left mb-5\"},[_c('button',{staticClass:\"ml-3 btn btn-info\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.showOpened = true}}},[_vm._v(\"\\n        Open \"),_c('span',{staticClass:\"badge badge-light\"},[_vm._v(_vm._s(_vm.opened.length))])]),_c('button',{staticClass:\"ml-3 btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.showOpened = false}}},[_vm._v(\"\\n        Closed \"),_c('span',{staticClass:\"badge badge-light\"},[_vm._v(_vm._s(_vm.closed.length))])])]),_c('div',{staticClass:\"dropdown ml-auto mr-3 mb-3\"},[_c('button',{staticClass:\"btn btn-secondary dropdown-toggle\",attrs:{\"disabled\":_vm.checking === false,\"type\":\"button\",\"id\":\"dropdownMenuButton\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[_vm._v(\"\\n        Mark as\\n      \")]),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"aria-labelledby\":\"dropdownMenuButton\"}},[_c('button',{staticClass:\"dropdown-item\",on:{\"click\":_vm.reopenIssue}},[_vm._v(\"Open\")]),_c('button',{staticClass:\"dropdown-item\",on:{\"click\":_vm.closeIssue}},[_vm._v(\"Closed\")])])]),_c('div',{staticClass:\"dropdown mr-3\"},[_c('button',{staticClass:\"btn btn-secondary dropdown-toggle\",attrs:{\"disabled\":_vm.checking === false,\"type\":\"button\",\"id\":\"dropdownMenuButton\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[_vm._v(\"\\n        加入到 Milestone\\n      \")]),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"aria-labelledby\":\"dropdownMenuButton\"}},_vm._l((_vm.milestones),function(mile,index){return _c('button',{staticClass:\"dropdown-item\",on:{\"click\":function($event){_vm.addIssueTo (mile.mileId)}}},[_vm._v(\"\\n\\n          \"+_vm._s(mile.title)+\"\\n\\n          \"),(_vm.mileId === mile.mileId)?[_c('i',{staticClass:\"ml-2 fa fa-check\",attrs:{\"aria-hidden\":\"true\"}})]:_vm._e()],2)}),0)]),_c('div',{staticClass:\"dropdown mr-3\"},[_c('button',{staticClass:\"btn btn-secondary dropdown-toggle\",attrs:{\"disabled\":_vm.checking === false,\"type\":\"button\",\"id\":\"dropdownMenuButton\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[_vm._v(\"\\n        Assign to\\n      \")]),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"aria-labelledby\":\"dropdownMenuButton\"}},_vm._l((_vm.users),function(user,index){return _c('button',{staticClass:\"dropdown-item\",on:{\"click\":function($event){_vm.assignTo (user.assigneeId, user.avatarHash)}}},[_vm._v(\"\\n\\n          \"+_vm._s(user.name)+\"\\n          \")])}),0)])]),_c('h3',{staticClass:\"text-left\"},[_vm._v(_vm._s(_vm.percentage)+\"% Complete\")]),_c('div',{staticClass:\"progress\"},[_c('div',{staticClass:\"progress-bar bg-success\",style:({ width: _vm.percentage + '%' }),attrs:{\"role\":\"progressbar\",\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\"}})]),(_vm.issues.length >= 1)?_c('div',{staticClass:\"mt-5 list-group\"},[_vm._l((_vm.issues),function(issue){return (issue.issueOpened === true && _vm.showOpened === true)?_c('li',{staticClass:\"clearfix text-left list-group-item list-group-item-action\",staticStyle:{\"line-height\":\"50px\"},attrs:{\"tag\":\"li\",\"type\":\"li\",\"active-class\":\"active\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.checked),expression:\"checked\"}],staticClass:\"mr-3\",attrs:{\"type\":\"checkbox\"},domProps:{\"value\":{ issueId: issue.issueId, assigneeId: issue.assigneeId },\"checked\":Array.isArray(_vm.checked)?_vm._i(_vm.checked,{ issueId: issue.issueId, assigneeId: issue.assigneeId })>-1:(_vm.checked)},on:{\"change\":function($event){var $$a=_vm.checked,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v={ issueId: issue.issueId, assigneeId: issue.assigneeId },$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.checked=$$a.concat([$$v]))}else{$$i>-1&&(_vm.checked=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.checked=$$c}}}}),_c('router-link',{attrs:{\"to\":{ name: 'issue', params: { issueId: issue.issueId }},\"tag\":\"a\",\"active-class\":\"active\"}},[_c('a',[_vm._v(_vm._s(issue.name))])]),_vm._l((issue.labels),function(label){return _c('span',{staticClass:\"py-2 px-3 ml-3 badge badge-primary\"},[_vm._v(_vm._s(label))])}),_vm._l((issue.avatarHash),function(hash){return (issue.avatarHash.length > 0)?[_c('img',{staticClass:\"ml-3 float-right rounded\",staticStyle:{\"width\":\"50px\"},attrs:{\"src\":'https://www.gravatar.com/avatar/' + hash,\"alt\":\"\"}})]:_vm._e()})],2):_vm._e()}),_vm._l((_vm.issues),function(issue){return (issue.issueOpened === false && _vm.showOpened === false)?_c('li',{staticClass:\"clearfix text-left list-group-item list-group-item-action\",staticStyle:{\"line-height\":\"50px\"},attrs:{\"tag\":\"li\",\"type\":\"li\",\"active-class\":\"active\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.checked),expression:\"checked\"}],staticClass:\"mr-3\",attrs:{\"type\":\"checkbox\"},domProps:{\"value\":{ issueId: issue.issueId, assigneeId: issue.assigneeId },\"checked\":Array.isArray(_vm.checked)?_vm._i(_vm.checked,{ issueId: issue.issueId, assigneeId: issue.assigneeId })>-1:(_vm.checked)},on:{\"change\":function($event){var $$a=_vm.checked,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v={ issueId: issue.issueId, assigneeId: issue.assigneeId },$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.checked=$$a.concat([$$v]))}else{$$i>-1&&(_vm.checked=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.checked=$$c}}}}),_c('router-link',{attrs:{\"to\":{ name: 'issue', params: { issueId: issue.issueId }},\"tag\":\"a\",\"active-class\":\"active\"}},[_c('a',[_vm._v(_vm._s(issue.name))])]),_vm._l((issue.labels),function(label){return _c('span',{staticClass:\"py-2 px-3 ml-3 badge badge-primary\"},[_vm._v(_vm._s(label))])}),_vm._l((issue.avatarHash),function(hash){return (issue.avatarHash.length > 0)?[_c('img',{staticClass:\"ml-3 float-right rounded\",staticStyle:{\"width\":\"50px\"},attrs:{\"src\":'https://www.gravatar.com/avatar/' + hash,\"alt\":\"\"}})]:_vm._e()})],2):_vm._e()})],2):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container my-4\">\r\n    \r\n    <h3 class=\"my-5 text-left\">\r\n\r\n      <router-link :to=\"{ name: 'organization'}\" tag=\"a\" active-class=\"active\">\r\n        <a>{{ orgName }}</a>\r\n      </router-link>\r\n       / \r\n      <router-link :to=\"{ name: 'project'}\" tag=\"a\" active-class=\"active\">\r\n        <a>{{ proName }}</a>\r\n      </router-link>\r\n\r\n      <h1 class=\"my-3\">{{ mileTitle }}</h1>\r\n\r\n    </h3>\r\n    \r\n\r\n    <!-- Mark-As Dropdown Menu -->\r\n\r\n    <div class=\"row\">\r\n\r\n      <div class=\"rwo text-left mb-5\">\r\n\r\n        <button @click=\"showOpened = true\" type=\"button\" class=\"ml-3 btn btn-info\">\r\n          Open <span class=\"badge badge-light\">{{ opened.length }}</span>\r\n        </button>\r\n        <button @click=\"showOpened = false\" type=\"button\" class=\"ml-3 btn btn-secondary\">\r\n          Closed <span class=\"badge badge-light\">{{ closed.length }}</span>\r\n        </button>\r\n\r\n      </div>\r\n      \r\n      <div class=\"dropdown ml-auto mr-3 mb-3\">\r\n        <button :disabled=\"checking === false\" class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Mark as\r\n        </button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <button @click=\"reopenIssue\" class=\"dropdown-item\">Open</button>\r\n          <button @click=\"closeIssue\" class=\"dropdown-item\">Closed</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Milestone Dropdown Menu -->\r\n\r\n      <div class=\"dropdown mr-3\">\r\n        <button :disabled=\"checking === false\" class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          加入到 Milestone\r\n        </button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <button @click=\"addIssueTo (mile.mileId)\" v-for=\"(mile, index) in milestones\" class=\"dropdown-item\">\r\n\r\n            {{ mile.title }}\r\n\r\n            <template v-if=\"mileId === mile.mileId\">\r\n              <i class=\"ml-2 fa fa-check\" aria-hidden=\"true\"></i>\r\n            </template>\r\n\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Assign-To Dropdown Menu -->\r\n\r\n      <div class=\"dropdown mr-3\">\r\n        <button :disabled=\"checking === false\" class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Assign to\r\n        </button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <button v-for=\"(user, index) in users\" @click=\"assignTo (user.assigneeId, user.avatarHash)\" class=\"dropdown-item\">\r\n\r\n            {{ user.name }}\r\n            <!-- <i class=\"ml-2 fa fa-check\" aria-hidden=\"true\"></i> -->\r\n            \r\n          </button>\r\n        \r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n\r\n    <h3 class=\"text-left\">{{ percentage }}% Complete</h3>\r\n\r\n    <!-- Issue List -->\r\n\r\n    <div class=\"progress\">\r\n      <div class=\"progress-bar bg-success\" role=\"progressbar\" :style=\"{ width: percentage + '%' }\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n\r\n    <div class=\"mt-5 list-group\" v-if=\"issues.length >= 1\">\r\n\r\n        <li v-if=\"issue.issueOpened === true && showOpened === true\" v-for=\"issue in issues\" style=\"line-height: 50px\" tag=\"li\" type=\"li\" class=\"clearfix text-left list-group-item list-group-item-action\" active-class=\"active\">\r\n\r\n          <input class=\"mr-3\" type=\"checkbox\" :value=\"{ issueId: issue.issueId, assigneeId: issue.assigneeId }\" v-model=\"checked\">\r\n\r\n          <router-link :to=\"{ name: 'issue', params: { issueId: issue.issueId }}\" tag=\"a\" active-class=\"active\">\r\n            <a>{{ issue.name }}</a>\r\n          </router-link>\r\n          \r\n\r\n          <span v-for=\"label in issue.labels\" class=\"py-2 px-3 ml-3 badge badge-primary\">{{ label }}</span>\r\n\r\n          <template v-if=\"issue.avatarHash.length > 0\" v-for=\"hash in issue.avatarHash\">\r\n            <img :src=\"'https://www.gravatar.com/avatar/' + hash\" style=\"width: 50px\" class=\"ml-3 float-right rounded\" alt=\"\">\r\n          </template>\r\n          \r\n        </li>\r\n\r\n        <li v-if=\"issue.issueOpened === false && showOpened === false\" v-for=\"issue in issues\" style=\"line-height: 50px\" tag=\"li\" type=\"li\" class=\"clearfix text-left list-group-item list-group-item-action\" active-class=\"active\">\r\n\r\n          <input class=\"mr-3\" type=\"checkbox\" :value=\"{ issueId: issue.issueId, assigneeId: issue.assigneeId }\" v-model=\"checked\">\r\n\r\n          <router-link :to=\"{ name: 'issue', params: { issueId: issue.issueId }}\" tag=\"a\" active-class=\"active\">\r\n            <a>{{ issue.name }}</a>\r\n          </router-link>\r\n\r\n          <span v-for=\"label in issue.labels\" class=\"py-2 px-3 ml-3 badge badge-primary\">{{ label }}</span>\r\n\r\n          <template v-if=\"issue.avatarHash.length > 0\" v-for=\"hash in issue.avatarHash\">\r\n            <img :src=\"'https://www.gravatar.com/avatar/' + hash\" style=\"width: 50px\" class=\"ml-3 float-right rounded\" alt=\"\">\r\n          </template>\r\n          \r\n        </li>\r\n\r\n    </div>\r\n\r\n  </div>\r\n    \r\n\r\n</template>\r\n\r\n<script>\r\n  import Parse from \"parse\";\r\n\r\n  export default {\r\n    \r\n\r\n    name: 'milestone-detail',\r\n\r\n\r\n    components: {\r\n    },\r\n\r\n\r\n    data () {\r\n      return {\r\n        proName: '',\r\n        issues: [],\r\n        username: this.$store.state.user.username,\r\n        // labels: [],\r\n        checked: [],\r\n        opened: [],\r\n        closed: [],\r\n        showOpened: true,\r\n        milestones: [],\r\n        users: [],\r\n        orgName: '',\r\n        orgId: '',\r\n        percentage: 0,\r\n      }\r\n    },\r\n\r\n\r\n    computed: {\r\n      mileId () {\r\n        return this.$route.params.mileId;\r\n      },\r\n\r\n\r\n      mileTitle () {\r\n        return this.$route.params.mileTitle;\r\n      },\r\n\r\n\r\n      proId () {\r\n        return this.$route.params.proId;\r\n      },\r\n\r\n\r\n      userId () {\r\n        return this.$store.state.user.input.userId;\r\n      },\r\n\r\n\r\n      checking () {\r\n        let $vmc = this;\r\n        if ($vmc.checked.length === 0) return false;\r\n      }\r\n    },\r\n\r\n\r\n    mounted () {\r\n      let $vmc = this;\r\n      \r\n      $vmc.showUser ();\r\n      $vmc.showProName ();\r\n      $vmc.showIssue ();\r\n      $vmc.showMilestone ();\r\n    },\r\n\r\n\r\n    methods: {\r\n      showIssue () {\r\n        let $vmc = this;\r\n        let ary = [];\r\n        const Issue = Parse.Object.extend ('Issue');\r\n        let query = new Parse.Query (Issue);\r\n        query.equalTo ('milestone', $vmc.mileId);\r\n        query.find ()\r\n          .then (resp => {\r\n            $vmc.opened = [];\r\n            $vmc.closed = [];\r\n\r\n            for (let i = 0; i < resp.length; i ++) {\r\n              let obj = {};\r\n              let object = resp[i];\r\n              obj.name = object.get ('name');\r\n              obj.issueId = object.id;\r\n              obj.avatarHash = object.get ('avatarHash');\r\n              obj.assigneeId = object.get ('assigneeId');\r\n\r\n              let arry = [];\r\n              let Label = Parse.Object.extend ('Label');\r\n              let query = new Parse.Query (Label);\r\n              query.equalTo ('issueId', object.id);\r\n              query.find ()\r\n                .then (resp => {\r\n                  for (let i = 0; i < resp.length; i ++) {\r\n                    let object = resp[i];\r\n                    arry.push (object.get ('title'));\r\n                  }\r\n                });\r\n\r\n              obj.labels = arry;\r\n              obj.issueOpened = object.get ('issueOpened');\r\n              if (obj.issueOpened === true) {\r\n                $vmc.opened.push (object.id);\r\n              } else {\r\n                $vmc.closed.push (object.id);\r\n              }\r\n              ary.push (obj);\r\n            }\r\n          })\r\n          .then (resp => {\r\n            let closed = $vmc.closed.length;\r\n            let opened = $vmc.opened.length\r\n            if (opened + closed === 0) {\r\n              $vmc.percentage = 0;\r\n            } else {\r\n              $vmc.percentage = ((closed / (opened + closed)) * 100).toFixed (0);\r\n            }\r\n          })\r\n\r\n          $vmc.issues = ary;\r\n      },\r\n\r\n\r\n      showUser () {\r\n        let $vmc = this;\r\n        let Project = Parse.Object.extend ('Project');\r\n        let query = new Parse.Query (Project);\r\n        let ary = [];\r\n        query.get ($vmc.proId)\r\n          .then (resp => {\r\n            let orgId = resp.get ('orgId');\r\n            let Org = Parse.Object.extend ('Organization');\r\n            let query = new Parse.Query (Org);\r\n            $vmc.orgId = orgId;\r\n            query.get (orgId)\r\n              .then (resp => {\r\n                let results = resp.get ('memberId');\r\n                for (let i = 0; i < results.length; i ++) {\r\n                  let obj = {};\r\n                  let object = results[i];\r\n                  let Account = Parse.Object.extend ('Account');\r\n                  let query = new Parse.Query (Account);\r\n                  query.get (object)\r\n                    .then (resp => {\r\n                      // obj.uerId = object;\r\n                      obj.name = resp.get ('username');\r\n                      obj.assigneeId = object;\r\n                      obj.avatarHash = resp.get ('avatarHash');\r\n                      obj.email = resp.get ('email');\r\n\r\n                      ary.push (obj);\r\n                    });\r\n                }\r\n              });\r\n\r\n              $vmc.users = ary;\r\n          }, (error) => {\r\n            // The object was not retrieved successfully.\r\n            // error is a Parse.Error with an error code and message.\r\n          });\r\n\r\n      },\r\n\r\n\r\n      showProName () {\r\n        let $vmc = this;\r\n        let id = $vmc.$route.params.proId;\r\n\r\n        const Pro = Parse.Object.extend ('Project');\r\n        let query = new Parse.Query (Pro);\r\n        query.get (id)\r\n          .then (resp => {\r\n            $vmc.proName = resp.get ('name');\r\n            $vmc.orgName = resp.get ('orgName');\r\n          });\r\n      },\r\n\r\n\r\n      closeIssue () {\r\n        let $vmc = this;\r\n        let Issue = Parse.Object.extend ('Issue');\r\n\r\n        for (let i = 0; i < $vmc.checked.length; i ++) {\r\n          let query = new Parse.Query (Issue);\r\n          query.get ($vmc.checked[i].issueId)\r\n            .then (resp => {\r\n              resp.set ('issueOpened', false);\r\n              resp.save ()\r\n                .then (() => {\r\n                  $vmc.showIssue ();\r\n                })\r\n              }, (error) => {});\r\n        }\r\n\r\n        $vmc.checked = [];\r\n      },\r\n\r\n\r\n      reopenIssue () {\r\n        let $vmc = this;\r\n        let Issue = Parse.Object.extend ('Issue');\r\n        for (let i = 0; i < $vmc.checked.length; i ++) {\r\n          let query = new Parse.Query (Issue);\r\n          query.get ($vmc.checked[i].issueId)\r\n          .then (resp => {\r\n            resp.set ('issueOpened', true);\r\n            resp.save ()\r\n              .then (() => $vmc.showIssue ());\r\n            // The object was retrieved successfully.\r\n            }, (error) => {\r\n              // The object was not retrieved successfully.\r\n              // error is a Parse.Error with an error code and message.\r\n            });\r\n        }\r\n\r\n        $vmc.checked = [];\r\n      },\r\n\r\n\r\n      showMilestone () {\r\n        let $vmc = this;\r\n        let Mile = Parse.Object.extend ('Milestone');\r\n        let query = new Parse.Query (Mile);\r\n        let ary = [];\r\n        query.equalTo ('proId', $vmc.proId);\r\n        query.find ()\r\n          .then (resp => {\r\n            for (let i = 0; i < resp.length; i++) {\r\n              let obj = {};\r\n              let object = resp[i];\r\n              obj.mileId = object.id;\r\n              obj.title = object.get ('title');\r\n              ary.push (obj)\r\n            }\r\n          });\r\n        $vmc.milestones = ary;\r\n      },\r\n\r\n\r\n      addIssueTo (mileId) {\r\n        let $vmc = this;\r\n        let Issue = Parse.Object.extend ('Issue');\r\n        let ary = [];\r\n\r\n        for (let i = 0; i < $vmc.checked.length; i ++) {\r\n          let query = new Parse.Query (Issue);\r\n          \r\n          query.get ($vmc.checked[i].issueId)\r\n            .then (resp => {\r\n              \r\n              resp.set ('milestone', mileId);\r\n              resp.save ()\r\n                .then (resp => {\r\n                  $vmc.showIssue ();\r\n                  $vmc.checked = [];\r\n                });\r\n              \r\n              let Mile = Parse.Object.extend ('Milestone');\r\n              let query = new Parse.Query (Mile);\r\n              query.get (mileId)\r\n                .then (resp => {\r\n                  // The object was retrieved successfully.\r\n                  resp.set ('proId', $vmc.proId);\r\n                  return resp.save ();\r\n                }, (error) => {\r\n                  // The object was not retrieved successfully.\r\n                  // error is a Parse.Error with an error code and message.\r\n                });\r\n              \r\n            }, (error) => {\r\n              // The object was not retrieved successfully.\r\n              // error is a Parse.Error with an error code and message.\r\n            });\r\n\r\n        }\r\n      },\r\n\r\n\r\n      assignTo (assigneeId, avatarHash) {\r\n        let $vmc = this;\r\n        let Issue = Parse.Object.extend ('Issue');\r\n        let ary = [];\r\n        let query = new Parse.Query (Issue);\r\n        let checkedIds = $vmc.checked.map (item => item.issueId);\r\n        query.containedIn ('objectId', checkedIds);\r\n        query.find ()\r\n          .then (resp => {\r\n            for (let i = 0; i < resp.length; i ++) {\r\n              let obj = {};\r\n              let object = resp[i];\r\n              let query = new Parse.Query (Issue);\r\n              query.get (object.id)\r\n                .then (resp => {\r\n                  resp.addUnique ('avatarHash', avatarHash);\r\n                  resp.addUnique ('assigneeId', assigneeId);\r\n                  // obj.assignee = userId;\r\n                  // obj.avatarHash = avatarHash;\r\n                  // resp.addUnique ('assignee', obj);\r\n                  resp.save ()\r\n                    .then (() => {\r\n                      $vmc.showIssue ();\r\n                      $vmc.checked = [];\r\n                    })\r\n                })\r\n\r\n            }\r\n          })\r\n\r\n      },\r\n\r\n\r\n      \r\n      addMilestone () {\r\n        let $vmc = this;\r\n\r\n        const Mile = Parse.Object.extend ('Milestone');\r\n        const mile = new Mile ();\r\n\r\n        mile.set ('title', $vmc.mileTitle);\r\n        mile.set ('proId', $vmc.proId);\r\n        mile.set ('orgId', $vmc.orgId);\r\n        mile.set ('mileOpened', true);\r\n\r\n        mile.save ()\r\n          .then (resp => {\r\n            $vmc.mileTitle = '';\r\n            $vmc.showMilestone ();\r\n            // $vmc.showMile ();\r\n            // Execute any logic that should take place after the object is saved.\r\n          }, (error) => {\r\n            // Execute any logic that should take place if the save fails.\r\n            // error is a Parse.Error with an error code and message.\r\n            alert ('Failed to create new object, with error code: ' + error.message);\r\n          });\r\n      },\r\n    },\r\n\r\n    watch: {\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  input[type=\"checkbox\"] {\r\n    width: 20px;\r\n    height: 20px;\r\n  };\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./milestone-detail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./milestone-detail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./milestone-detail.vue?vue&type=template&id=4e77fadc&scoped=true&\"\nimport script from \"./milestone-detail.vue?vue&type=script&lang=js&\"\nexport * from \"./milestone-detail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./milestone-detail.vue?vue&type=style&index=0&id=4e77fadc&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4e77fadc\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}