{"version":3,"sources":["webpack:///./src/views/project.vue?8c11","webpack:///src/views/project.vue","webpack:///./src/views/project.vue?4777","webpack:///./src/views/project.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","proName","attrs","for","on","keyup","$event","type","indexOf","_k","keyCode","key","submitIssue","directives","name","rawName","value","expression","modifiers","trim","placeholder","id","domProps","input","target","composing","title","blur","$forceUpdate","rows","content","click","preventDefault","cancel","_e","addIssue","to","params","proId","tag","active-class","showOpened","opened","length","closed","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","reopenIssue","closeIssue","_l","mile","index","addIssueTo","mileId","user","assignTo","userId","avatarHash","issues","issue","issueOpened","staticStyle","line-height","issueId","checked","Array","isArray","_i","change","$$a","$$el","$$c","$$v","$$i","concat","slice","label","hash","width","src","alt","staticRenderFns","projectvue_type_script_lang_js_","components","data","adding","username","$store","state","labels","milestones","users","orgName","computed","$route","created","mounted","$vmc","showUser","showProName","showIssue","showMilestone","methods","Project","parse_default","a","Object","extend","query","Query","ary","get","then","resp","orgId","Org","results","_loop","i","obj","object","Account","email","push","error","Pro","Issue","equalTo","find","_loop2","creator","arry","Label","_object","showLabel","set","save","alert","message","Mile","addUnique","containedIn","_query","watch","views_projectvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0cebde.a533ff63.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container my-4\"},[_c('h3',{staticClass:\"my-3 text-left\"},[_vm._v(\"Project: \"+_vm._s(_vm.proName))]),(_vm.adding)?_c('div',[_c('form',{staticClass:\"col-8 mx-auto my-5\"},[_c('div',{staticClass:\"form-group text-left\"},[_c('label',{attrs:{\"for\":\"title\"},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submitIssue($event)}}},[_vm._v(\"Issue Title\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.title),expression:\"title\",modifiers:{\"trim\":true}}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Issue Title\",\"id\":\"title\"},domProps:{\"value\":(_vm.title)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.title=$event.target.value.trim()},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_c('div',{staticClass:\"form-group text-left\"},[_c('label',{attrs:{\"for\":\"content\"},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submitIssue($event)}}},[_vm._v(\"Issue Content\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.content),expression:\"content\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Issue Content\",\"id\":\"content\",\"rows\":\"10\"},domProps:{\"value\":(_vm.content)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.content=$event.target.value}}})]),_c('button',{staticClass:\"mx-3 btn btn-success\",on:{\"click\":function($event){$event.preventDefault();return _vm.submitIssue($event)}}},[_vm._v(\"Submit\")]),_c('button',{staticClass:\"mx-3 btn btn-danger\",on:{\"click\":function($event){$event.preventDefault();return _vm.cancel($event)}}},[_vm._v(\"Cancel\")])])]):_vm._e(),_c('button',{staticClass:\"my-3 btn btn-success\",on:{\"click\":_vm.addIssue}},[_vm._v(\"Add Issue\")]),_c('router-link',{staticClass:\"ml-3 btn btn-primary\",attrs:{\"to\":{ name: 'milestone', params: { proId: _vm.proId } },\"tag\":\"button\",\"active-class\":\"active\"}},[_vm._v(\"\\n    Milestone\\n  \")]),_c('div',{staticClass:\"rwo text-left\"},[_c('button',{staticClass:\"ml-3 btn btn-info\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.showOpened = true}}},[_vm._v(\"\\n      Opened \"),_c('span',{staticClass:\"badge badge-light\"},[_vm._v(_vm._s(_vm.opened.length))])]),_c('button',{staticClass:\"ml-3 btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.showOpened = false}}},[_vm._v(\"\\n      Closed \"),_c('span',{staticClass:\"badge badge-light\"},[_vm._v(_vm._s(_vm.closed.length))])])]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"dropdown ml-auto mr-3 mb-3\"},[_c('button',{staticClass:\"btn btn-secondary dropdown-toggle\",attrs:{\"type\":\"button\",\"id\":\"dropdownMenuButton\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[_vm._v(\"\\n        Mark as\\n      \")]),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"aria-labelledby\":\"dropdownMenuButton\"}},[_c('button',{staticClass:\"dropdown-item\",on:{\"click\":_vm.reopenIssue}},[_vm._v(\"Open\")]),_c('button',{staticClass:\"dropdown-item\",on:{\"click\":_vm.closeIssue}},[_vm._v(\"Closed\")])])]),_c('div',{staticClass:\"dropdown mr-3\"},[_c('button',{staticClass:\"btn btn-secondary dropdown-toggle\",attrs:{\"type\":\"button\",\"id\":\"dropdownMenuButton\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[_vm._v(\"\\n        加入到 Milestone\\n      \")]),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"aria-labelledby\":\"dropdownMenuButton\"}},_vm._l((_vm.milestones),function(mile,index){return _c('button',{staticClass:\"dropdown-item\",on:{\"click\":function($event){_vm.addIssueTo (mile.mileId)}}},[_vm._v(_vm._s(mile.title))])}),0)]),_c('div',{staticClass:\"dropdown mr-3\"},[_c('button',{staticClass:\"btn btn-secondary dropdown-toggle\",attrs:{\"type\":\"button\",\"id\":\"dropdownMenuButton\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[_vm._v(\"\\n        Assign to\\n      \")]),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"aria-labelledby\":\"dropdownMenuButton\"}},_vm._l((_vm.users),function(user){return _c('button',{staticClass:\"dropdown-item\",on:{\"click\":function($event){_vm.assignTo (user.userId, user.avatarHash)}}},[_vm._v(_vm._s(user.name))])}),0)])]),(_vm.issues.length >= 1)?_c('div',{staticClass:\"mt-5 list-group\"},[_vm._l((_vm.issues),function(issue){return [(issue.issueOpened === false && _vm.showOpened === false)?_c('router-link',{staticClass:\"clearfix text-left list-group-item list-group-item-action\",staticStyle:{\"line-height\":\"50px\"},attrs:{\"to\":{ name: 'issue', params: { issueId: issue.issueId }},\"tag\":\"li\",\"type\":\"li\",\"active-class\":\"active\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.checked),expression:\"checked\"}],staticClass:\"mr-3\",attrs:{\"type\":\"checkbox\"},domProps:{\"value\":issue.issueId,\"checked\":Array.isArray(_vm.checked)?_vm._i(_vm.checked,issue.issueId)>-1:(_vm.checked)},on:{\"change\":function($event){var $$a=_vm.checked,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=issue.issueId,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.checked=$$a.concat([$$v]))}else{$$i>-1&&(_vm.checked=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.checked=$$c}}}}),_c('a',[_vm._v(_vm._s(issue.name))]),_vm._l((issue.labels),function(label){return _c('span',{staticClass:\"py-2 px-3 ml-3 badge badge-primary\"},[_vm._v(_vm._s(label))])}),_vm._l((issue.avatarHash),function(hash){return (issue.avatarHash.length > 0)?[_c('img',{staticClass:\"ml-3 float-right rounded\",staticStyle:{\"width\":\"50px\"},attrs:{\"src\":'https://www.gravatar.com/avatar/' + hash,\"alt\":\"\"}})]:_vm._e()})],2):(issue.issueOpened === true && _vm.showOpened === true)?_c('router-link',{staticClass:\"clearfix text-left list-group-item list-group-item-action\",staticStyle:{\"line-height\":\"50px\"},attrs:{\"to\":{ name: 'issue', params: { issueId: issue.issueId }},\"tag\":\"li\",\"type\":\"li\",\"active-class\":\"active\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.checked),expression:\"checked\"}],staticClass:\"mr-3\",attrs:{\"type\":\"checkbox\"},domProps:{\"value\":issue.issueId,\"checked\":Array.isArray(_vm.checked)?_vm._i(_vm.checked,issue.issueId)>-1:(_vm.checked)},on:{\"change\":function($event){var $$a=_vm.checked,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=issue.issueId,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.checked=$$a.concat([$$v]))}else{$$i>-1&&(_vm.checked=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.checked=$$c}}}}),_c('a',[_vm._v(_vm._s(issue.name))]),_vm._l((issue.labels),function(label){return _c('span',{staticClass:\"py-2 px-3 ml-3 badge badge-primary\"},[_vm._v(_vm._s(label))])}),_vm._l((issue.avatarHash),function(hash){return (issue.avatarHash.length > 0)?[_c('img',{staticClass:\"ml-3 float-right rounded\",staticStyle:{\"width\":\"50px\"},attrs:{\"src\":'https://www.gravatar.com/avatar/' + hash,\"alt\":\"\"}})]:_vm._e()})],2):_vm._e()]})],2):_c('div',{staticClass:\"card text-left\"},[_c('h4',{staticClass:\"card-body py-5 font-italic font-weight-lighter\"},[_vm._v(\"\\n      There aren’t any open issues.\\n      No description provided.\\n    \")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"my-3 text-left\">Project: {{ proName }}</h3>\r\n\r\n    <div v-if=\"adding\">\r\n\r\n      <form class=\"col-8 mx-auto my-5\">\r\n        <div class=\"form-group text-left\">\r\n          <label @keyup.enter=\"submitIssue\" for=\"title\">Issue Title</label>\r\n          <input v-model.trim=\"title\" class=\"form-control\" placeholder=\"Issue Title\" id=\"title\">\r\n        </div>\r\n        <div class=\"form-group text-left\">\r\n          <label @keyup.enter=\"submitIssue\" for=\"content\">Issue Content</label>\r\n          <textarea v-model=\"content\" placeholder=\"Issue Content\" class=\"form-control\" id=\"content\" rows=\"10\"></textarea>\r\n        </div>\r\n        <button @click.prevent=\"submitIssue\" class=\"mx-3 btn btn-success\">Submit</button>\r\n        <button @click.prevent=\"cancel\" class=\"mx-3 btn btn-danger\">Cancel</button>\r\n      </form>\r\n      \r\n    </div>\r\n    \r\n    <button class=\"my-3 btn btn-success\" @click=\"addIssue\">Add Issue</button>\r\n\r\n    <router-link :to=\"{ name: 'milestone', params: { proId: proId } }\" tag=\"button\" class=\"ml-3 btn btn-primary\" active-class=\"active\">\r\n      Milestone\r\n    </router-link>\r\n\r\n    <div class=\"rwo text-left\">\r\n      <button @click=\"showOpened = true\" type=\"button\" class=\"ml-3 btn btn-info\">\r\n        Opened <span class=\"badge badge-light\">{{ opened.length }}</span>\r\n      </button>\r\n      <button @click=\"showOpened = false\" type=\"button\" class=\"ml-3 btn btn-secondary\">\r\n        Closed <span class=\"badge badge-light\">{{ closed.length }}</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Mark-As Dropdown Menu -->\r\n\r\n    <div class=\"row\">\r\n      \r\n      <div class=\"dropdown ml-auto mr-3 mb-3\">\r\n        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Mark as\r\n        </button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <button @click=\"reopenIssue\" class=\"dropdown-item\">Open</button>\r\n          <button @click=\"closeIssue\" class=\"dropdown-item\">Closed</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Milestone Dropdown Menu -->\r\n\r\n      <div class=\"dropdown mr-3\">\r\n        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          加入到 Milestone\r\n        </button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <button @click=\"addIssueTo (mile.mileId)\" v-for=\"(mile, index) in milestones\" class=\"dropdown-item\">{{ mile.title }}</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Assign-To Dropdown Menu -->\r\n\r\n      <div class=\"dropdown mr-3\">\r\n        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Assign to\r\n        </button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <button v-for=\"user in users\" @click=\"assignTo (user.userId, user.avatarHash)\" class=\"dropdown-item\">{{ user.name }}</button>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n\r\n    <!-- Issue List -->\r\n\r\n    <div class=\"mt-5 list-group\" v-if=\"issues.length >= 1\">\r\n\r\n      <template v-for=\"issue in issues\">\r\n\r\n        <router-link style=\"line-height: 50px\" v-if=\"issue.issueOpened === false && showOpened === false\" :to=\"{ name: 'issue', params: { issueId: issue.issueId }}\" tag=\"li\" type=\"li\" class=\"clearfix text-left list-group-item list-group-item-action\" active-class=\"active\">\r\n\r\n            <input class=\"mr-3\" type=\"checkbox\" :value='issue.issueId' v-model=\"checked\">\r\n            <a>{{ issue.name }}</a>\r\n\r\n          <span v-for=\"label in issue.labels\" class=\"py-2 px-3 ml-3 badge badge-primary\">{{ label }}</span>\r\n\r\n          <template v-if=\"issue.avatarHash.length > 0\" v-for=\"hash in issue.avatarHash\">\r\n            <img :src=\"'https://www.gravatar.com/avatar/' + hash\" style=\"width: 50px\" class=\"ml-3 float-right rounded\" alt=\"\">\r\n          </template>\r\n          \r\n        </router-link>\r\n\r\n        <router-link style=\"line-height: 50px\" v-else-if=\"issue.issueOpened === true && showOpened === true\" :to=\"{ name: 'issue', params: { issueId: issue.issueId }}\" tag=\"li\" type=\"li\" class=\"clearfix text-left list-group-item list-group-item-action\" active-class=\"active\">\r\n          \r\n\r\n          <input class=\"mr-3\" type=\"checkbox\" :value='issue.issueId' v-model=\"checked\">\r\n          <a>{{ issue.name }}</a>\r\n          \r\n          <span v-for=\"label in issue.labels\" class=\"py-2 px-3 ml-3 badge badge-primary\">{{ label }}</span>\r\n\r\n          <template v-if=\"issue.avatarHash.length > 0\" v-for=\"hash in issue.avatarHash\">\r\n            <img :src=\"'https://www.gravatar.com/avatar/' + hash\" style=\"width: 50px\" class=\"ml-3 float-right rounded\" alt=\"\">\r\n          </template>\r\n          \r\n        </router-link>\r\n\r\n      </template>\r\n\r\n        \r\n    </div>\r\n\r\n    \r\n\r\n    <div v-else class=\"card text-left\">\r\n      <h4 class=\"card-body py-5 font-italic font-weight-lighter\">\r\n        There aren’t any open issues.\r\n        No description provided.\r\n      </h4>\r\n    </div>\r\n\r\n  </div>\r\n    \r\n\r\n</template>\r\n\r\n<script>\r\n  import Parse from \"parse\";\r\n\r\n  export default {\r\n    \r\n\r\n    name: 'project',\r\n\r\n\r\n    components: {\r\n    },\r\n\r\n\r\n    data () {\r\n      return {\r\n        proName: '',\r\n        issues: [],\r\n        adding: false,\r\n        title: '',\r\n        content: '',\r\n        username: this.$store.state.user.username,\r\n        labels: [],\r\n        checked: [],\r\n        opened: [],\r\n        closed: [],\r\n        showOpened: true,\r\n        milestones: [],\r\n        users: [],\r\n        orgName: '',\r\n        // memberId: [],\r\n        // avatarHash: '',\r\n      }\r\n    },\r\n\r\n\r\n    computed: {\r\n      proId () {\r\n        return  this.$route.params.proId;\r\n      },\r\n\r\n\r\n      userId () {\r\n        return this.$store.state.user.input.userId;\r\n      }\r\n    },\r\n\r\n\r\n    created () {\r\n      // Add Milestone\r\n\r\n      // let Milestone = Parse.Object.extend (\"Milestone\");\r\n      // let milestone = new Milestone ();\r\n\r\n      // milestone.set ('issues', []);\r\n\r\n      // milestone.save()\r\n      //   .then((milestone) => {\r\n      //     alert('New object created with objectId: ' + milestone.id);\r\n      //   }, (error) => {\r\n      //     // Execute any logic that should take place if the save fails.\r\n      //     // error is a Parse.Error with an error code and message.\r\n      //     alert('Failed to create new object, with error code: ' + error.message);\r\n      //   });\r\n    },\r\n\r\n\r\n    mounted () {\r\n      let $vmc = this;\r\n      \r\n      $vmc.showUser ();\r\n      $vmc.showProName ();\r\n      $vmc.showIssue ();\r\n      $vmc.showMilestone ();\r\n    },\r\n\r\n\r\n    methods: {\r\n      showUser () {\r\n        let $vmc = this;\r\n        let Project = Parse.Object.extend ('Project');\r\n        let query = new Parse.Query (Project);\r\n        let ary = [];\r\n        query.get ($vmc.proId)\r\n          .then (resp => {\r\n            let orgId = resp.get ('orgId')\r\n            let Org = Parse.Object.extend ('Organization');\r\n            let query = new Parse.Query (Org);\r\n            query.get (orgId)\r\n              .then (resp => {\r\n                let results = resp.get ('memberId');\r\n                for (let i = 0; i < results.length; i ++) {\r\n                  let obj = {};\r\n                  let object = results[i];\r\n                  let Account = Parse.Object.extend ('Account');\r\n                  let query = new Parse.Query (Account);\r\n                  query.get (object)\r\n                    .then (resp => {\r\n                      obj.name = resp.get ('username');\r\n                      obj.userId = object;\r\n                      obj.avatarHash = resp.get ('avatarHash');\r\n                      obj.email = resp.get ('email');\r\n\r\n                      // obj.avatarHash = $vmc.$md5 (email);\r\n                      ary.push (obj);\r\n                    });\r\n                }\r\n              });\r\n\r\n              $vmc.users = ary;\r\n          }, (error) => {\r\n            // The object was not retrieved successfully.\r\n            // error is a Parse.Error with an error code and message.\r\n          });\r\n      },\r\n\r\n\r\n      showProName () {\r\n        let $vmc = this;\r\n        let id = $vmc.$route.params.proId;\r\n        // console.log (id);\r\n\r\n        const Pro = Parse.Object.extend (\"Project\");\r\n        let query = new Parse.Query (Pro);\r\n        query.get (id)\r\n          .then (resp => {\r\n            $vmc.proName = resp.get ('name');\r\n            $vmc.orgName = resp.get ('orgName');\r\n          });\r\n      },\r\n\r\n      showIssue () {\r\n        let $vmc = this;\r\n        const Issue = Parse.Object.extend ('Issue');\r\n        let query = new Parse.Query (Issue);\r\n        query.equalTo (\"proId\", $vmc.proId);\r\n        let ary = [];\r\n        let opened = [];\r\n        let closed = [];\r\n        query.find ().then (resp => {\r\n          for (let i = 0; i < resp.length; i++) {\r\n            let obj = {};\r\n            let object = resp[i];\r\n            obj.name = object.get ('name');\r\n            obj.issueId = object.id;\r\n            obj.creator = object.get ('creator');\r\n            obj.issueOpened = object.get ('issueOpened');\r\n            obj.avatarHash = object.get ('avatarHash');\r\n            obj.userId = object.get ('userId');\r\n            // obj.assignee = object.get ('assignee');\r\n\r\n            let arry = [];\r\n            let Label = Parse.Object.extend ('Label');\r\n            let query = new Parse.Query (Label);\r\n            query.equalTo ('issueId', object.id);\r\n            query.find ()\r\n              .then (resp => {\r\n                for (let i = 0; i < resp.length; i ++) {\r\n                  let object = resp[i];\r\n                  arry.push (object.get ('title'));\r\n                }\r\n              });\r\n            obj.labels = arry;\r\n            ary.push (obj);\r\n\r\n            if (obj.issueOpened === true) {\r\n              opened.push (obj);\r\n            } else if (obj.issueOpened === false) {\r\n              closed.push (obj);\r\n            }\r\n          }\r\n        })\r\n        $vmc.issues = ary;\r\n        $vmc.opened = opened;\r\n        $vmc.closed = closed;\r\n      },\r\n\r\n\r\n      showLabel () {\r\n        \r\n        // let $vmc = this;\r\n        // let ary = [];\r\n        // let Label = Parse.Object.extend (\"Label\");\r\n        // let query = new Parse.Query (Label);\r\n        // query.equalTo ('issueId', $vmc.issueId);\r\n        // query.find ()\r\n        //   .then (resp => {\r\n        //     for (let i = 0; i < resp.length; i ++) {\r\n        //       let obj = {};\r\n        //       let object = resp[i];\r\n        //       for (let i = 0; i < $vmc.labels.length; i ++) {\r\n        //         if ($vmc.labels[i].labelId === object.id) {\r\n        //           $vmc.labels[i].added = true;\r\n        //           ary.push ($vmc.labels[i]);\r\n        //         }\r\n        //       }\r\n        //     }\r\n        //   })\r\n\r\n\r\n        // $vmc.label = ary;\r\n      },\r\n      \r\n\r\n      addIssue () {\r\n        this.adding = true;\r\n      },\r\n\r\n      submitIssue () {\r\n        let $vmc = this;\r\n        let Issue = Parse.Object.extend ('Issue');\r\n        let issue = new Issue ();\r\n\r\n        issue.set ('name', $vmc.title);\r\n        issue.set ('content', $vmc.content);\r\n        issue.set ('proId', $vmc.proId);\r\n        issue.set ('creator', $vmc.$store.state.user.username);\r\n        issue.set ('issueOpened', true);\r\n        issue.set ('milestone', []);\r\n        issue.set ('avatarHash', []);\r\n        issue.set ('userId', []);\r\n        issue.set ('proName', $vmc.proName);\r\n        issue.set ('orgName', $vmc.orgName);\r\n        // issue.addUnique ('memberId', $vmc.userId);\r\n\r\n        issue.save ()\r\n          .then (resp => {\r\n            $vmc.title = '';\r\n            $vmc.content = '';\r\n            $vmc.showIssue ();\r\n            $vmc.adding = false;\r\n          }, (error) => {\r\n            // Execute any logic that should take place if the save fails.\r\n            // error is a Parse.Error with an error code and message.\r\n            alert ('Failed to create new object, with error code: ' + error.message);\r\n          });\r\n      },\r\n\r\n      cancel () {\r\n        this.adding = false;\r\n        this.title = '';\r\n        this.content = '';\r\n      },\r\n\r\n\r\n      closeIssue () {\r\n        let $vmc = this;\r\n        let Issue = Parse.Object.extend ('Issue');\r\n        for (let i = 0; i < $vmc.checked.length; i ++) {\r\n          let query = new Parse.Query (Issue);\r\n          query.get ($vmc.checked[i])\r\n            .then (resp => {\r\n              resp.set ('issueOpened', false);\r\n              resp.save ()\r\n                .then (() => {\r\n                  $vmc.showIssue ();\r\n                })\r\n            }, (error) => {\r\n          });\r\n        }\r\n        $vmc.checked = [];\r\n      },\r\n\r\n\r\n      reopenIssue () {\r\n        let $vmc = this;\r\n        let Issue = Parse.Object.extend ('Issue');\r\n        for (let i = 0; i < $vmc.checked.length; i ++) {\r\n          let query = new Parse.Query (Issue);\r\n          query.get ($vmc.checked[i])\r\n          .then (resp => {\r\n            resp.set ('issueOpened', true);\r\n            resp.save ()\r\n              .then (() => $vmc.showIssue ());\r\n            // The object was retrieved successfully.\r\n          }, (error) => {\r\n            // The object was not retrieved successfully.\r\n            // error is a Parse.Error with an error code and message.\r\n          });\r\n        }\r\n        $vmc.checked = [];\r\n      },\r\n\r\n\r\n      showMilestone () {\r\n        let $vmc = this;\r\n        let Mile = Parse.Object.extend ('Milestone');\r\n        let query = new Parse.Query (Mile);\r\n        let ary = [];\r\n        query.equalTo ('proId', $vmc.proId);\r\n        query.find ()\r\n          .then (resp => {\r\n            for (let i = 0; i < resp.length; i++) {\r\n              let obj = {};\r\n              let object = resp[i];\r\n              obj.mileId = object.id;\r\n              obj.title = object.get ('title');\r\n              ary.push (obj)\r\n            }\r\n          });\r\n        $vmc.milestones = ary;\r\n      },\r\n\r\n\r\n      addIssueTo (mileId) {\r\n        let $vmc = this;\r\n        let Issue = Parse.Object.extend ('Issue');\r\n        let ary = [];\r\n\r\n        for (let i = 0; i < $vmc.checked.length; i ++) {\r\n          let query = new Parse.Query (Issue);\r\n          \r\n          query.get ($vmc.checked[i])\r\n            .then (resp => {\r\n              \r\n              resp.addUnique ('milestone', mileId);\r\n              resp.save ()\r\n                .then (resp => {\r\n                  $vmc.checked = [];\r\n                });\r\n              // ary.push (resp.id);\r\n              // obj.issueOpened = resp.get ('issueOpened');\r\n              \r\n              let Mile = Parse.Object.extend ('Milestone');\r\n              let query = new Parse.Query (Mile);\r\n              query.get (mileId)\r\n                .then (resp => {\r\n                  // The object was retrieved successfully.\r\n                  resp.set ('proId', $vmc.proId);\r\n                  return resp.save ();\r\n                }, (error) => {\r\n                  // The object was not retrieved successfully.\r\n                  // error is a Parse.Error with an error code and message.\r\n                });\r\n              \r\n            }, (error) => {\r\n              // The object was not retrieved successfully.\r\n              // error is a Parse.Error with an error code and message.\r\n            });\r\n\r\n          \r\n        }\r\n\r\n\r\n        \r\n      },\r\n\r\n\r\n      assignTo (userId, avatarHash) {\r\n        let $vmc = this;\r\n        let Issue = Parse.Object.extend ('Issue');\r\n        let ary = [];\r\n        let query = new Parse.Query (Issue);\r\n        query.containedIn ('objectId', $vmc.checked);\r\n        query.find ()\r\n          .then (resp => {\r\n            for (let i = 0; i < resp.length; i ++) {\r\n              let obj = {};\r\n              let object = resp[i];\r\n              let query = new Parse.Query (Issue);\r\n              query.get (object.id)\r\n                .then (resp => {\r\n                  resp.addUnique ('avatarHash', avatarHash);\r\n                  resp.addUnique ('userId', userId);\r\n                  // obj.assignee = userId;\r\n                  // obj.avatarHash = avatarHash;\r\n                  // resp.addUnique ('assignee', obj);\r\n                  resp.save ()\r\n                    .then (() => {\r\n                      $vmc.showIssue ();\r\n                      $vmc.checked = [];\r\n                    })\r\n                })\r\n\r\n            }\r\n          })\r\n\r\n      }\r\n    },\r\n\r\n    watch: {\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  \r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./project.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./project.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./project.vue?vue&type=template&id=c8a8d75e&scoped=true&\"\nimport script from \"./project.vue?vue&type=script&lang=js&\"\nexport * from \"./project.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c8a8d75e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}