{"version":3,"sources":["webpack:///./src/views/issue.vue?4508","webpack:///src/views/issue.vue","webpack:///./src/views/issue.vue?19b0","webpack:///./src/views/issue.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","to","name","tag","active-class","_v","_s","orgData","orgName","proData","proName","editTitle","title","creator","on","click","$event","directives","rawName","value","expression","type","placeholder","aria-label","aria-describedby","domProps","keyup","indexOf","_k","keyCode","key","changeTitle","input","target","composing","stashTitle","id","cancelChange","_l","label","added","_e","editing","creatorId","userId","editIssueContent","for","newContent","rows","stashIssueContent","preventDefault","cancelEdit","content","length","source","comment","index","commentor","editComment","commentId","deleteComment","commentEditing","stashComment","editedComment","cancelEditComment","commentText","addComment","toggleLabel","labelId","modifiers","trim","addLabel","newLabel","blur","$forceUpdate","editLabel","editMode","updateLabel","updateLabelTitle","cancelUpdate","staticRenderFns","issuevue_type_script_lang_js_","components","VueMarkdown","vue_markdown_common_default","a","data","comments","labels","created","computed","$store","state","user","issueId","$route","params","mounted","showIssueInfo","allLabel","showComment","methods","$vmc","Issue","parse_default","Object","extend","query","Query","get","then","resp","orgId","proId","Comment","set","username","save","error","alert","message","Label","ary","notEqualTo","find","_loop","i","obj","object","push","arry","equalTo","_i","_object","_i2","addUnique","_Label","_query","remove","confirm","destroy","watch","views_issuevue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d22c301.a0fb0fe2.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container my-4\"},[_c('h3',{staticClass:\"my-5 text-left\"},[_c('router-link',{attrs:{\"to\":{ name: 'organization'},\"tag\":\"a\",\"active-class\":\"active\"}},[_c('a',[_vm._v(_vm._s(_vm.orgData.orgName))])]),_vm._v(\" / \\n\\n    \"),_c('router-link',{attrs:{\"to\":{ name: 'project'},\"tag\":\"a\",\"active-class\":\"active\"}},[_c('a',[_vm._v(_vm._s(_vm.proData.proName))])])],1),(_vm.editTitle === false)?_c('div',{staticClass:\"row\"},[_c('h3',{staticClass:\"text-left\"},[_vm._v(_vm._s(_vm.title)+\" - Created by \"+_vm._s(_vm.creator))]),_c('button',{staticClass:\"btn btn-warning ml-5\",on:{\"click\":function($event){_vm.editTitle = true}}},[_vm._v(\"Edit Title\")])]):_c('div',{staticClass:\"row\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.stashTitle),expression:\"stashTitle\"}],staticClass:\"col-6 form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"New Title\",\"aria-label\":\"New Title\",\"aria-describedby\":\"button-addon2\"},domProps:{\"value\":(_vm.stashTitle)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.changeTitle($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.stashTitle=$event.target.value}}}),_c('button',{staticClass:\"ml-3 btn btn-success\",attrs:{\"type\":\"button\",\"id\":\"button-addon2\"},on:{\"click\":_vm.changeTitle}},[_vm._v(\"Submit\")]),_c('button',{staticClass:\"ml-3 btn btn-danger\",attrs:{\"type\":\"button\",\"id\":\"button-addon2\"},on:{\"click\":_vm.cancelChange}},[_vm._v(\"Cancel\")])]),_c('div',{staticClass:\"row\"},_vm._l((_vm.labels),function(label){return (label.added === true)?_c('span',{staticClass:\"py-2 px-3 mx-1 badge badge-primary\"},[_vm._v(_vm._s(label.title))]):_vm._e()}),0),_c('hr'),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-9\"},[_c('div',{staticClass:\"row mb-3\"},[_c('p',{staticClass:\"text-left mb-0\"},[_vm._v(\"\\n          Commented by \"),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(_vm._s(_vm.creator))])]),(_vm.editing === false && _vm.creatorId === _vm.userId)?_c('button',{staticClass:\"ml-auto mr-5 btn btn-warning\",on:{\"click\":_vm.editIssueContent}},[_vm._v(\"Edit\")]):_vm._e()]),(_vm.editing === true)?_c('form',{staticClass:\"mx-auto my-5\"},[_c('div',{staticClass:\"form-group text-left\"},[_c('label',{attrs:{\"for\":\"stashIssueContent\"},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.newContent($event)}}},[_vm._v(\"Comment\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.stashIssueContent),expression:\"stashIssueContent\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Comment Here\",\"id\":\"stashIssueContent\",\"rows\":\"10\"},domProps:{\"value\":(_vm.stashIssueContent)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.stashIssueContent=$event.target.value}}})]),_c('button',{staticClass:\"mx-3 btn btn-success\",on:{\"click\":function($event){$event.preventDefault();return _vm.newContent($event)}}},[_vm._v(\"Submit\")]),_c('button',{staticClass:\"mx-3 btn btn-danger\",on:{\"click\":function($event){$event.preventDefault();return _vm.cancelEdit($event)}}},[_vm._v(\"Cancel\")])]):_vm._e(),(_vm.content.length > 0)?_c('vue-markdown',{staticClass:\"p-4 border border-success text-left\",attrs:{\"source\":_vm.content}}):_c('p',{staticClass:\"p-4 border border-success text-left font-italic\"},[_vm._v(\"No description provided.\")]),_vm._l((_vm.comments),function(comment,index){return _c('div',{staticClass:\"mt-5\"},[_c('div',{staticClass:\"row mb-3\"},[_c('p',{staticClass:\"text-left mb-0\"},[_vm._v(\"\\n            Commented by \"),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(_vm._s(comment.commentor))])]),(comment.userId === _vm.userId)?_c('div',{staticClass:\"row ml-auto mr-5\"},[_c('button',{staticClass:\"btn mr-3 btn-warning\",on:{\"click\":function($event){_vm.editComment (comment.commentId, index)}}},[_vm._v(\"Edit\")]),_c('button',{staticClass:\"btn btn-danger\",on:{\"click\":function($event){_vm.deleteComment (comment.commentId, index)}}},[_vm._v(\"Delete\")])]):_vm._e()]),(comment.commentEditing === false)?_c('vue-markdown',{staticClass:\"p-4 border border-success text-left\",attrs:{\"source\":comment.content}}):_c('form',{staticClass:\"mx-auto my-5\"},[_c('div',{staticClass:\"form-group text-left\"},[_c('label',{attrs:{\"for\":\"commentContent\"}},[_vm._v(\"Edit Comment\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.stashComment),expression:\"stashComment\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Comment Here\",\"id\":\"commentContent\",\"rows\":\"10\"},domProps:{\"value\":(_vm.stashComment)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.stashComment=$event.target.value}}})]),_c('button',{staticClass:\"mx-3 btn btn-success\",on:{\"click\":function($event){$event.preventDefault();_vm.editedComment (comment.commentId, index)}}},[_vm._v(\"Submit\")]),_c('button',{staticClass:\"mx-3 btn btn-danger\",on:{\"click\":function($event){$event.preventDefault();_vm.cancelEditComment (index)}}},[_vm._v(\"Cancel\")])])],1)}),_c('form',{staticClass:\"mx-auto my-5\"},[_c('div',{staticClass:\"form-group text-left\"},[_c('label',{attrs:{\"for\":\"content\"}},[_vm._v(\"New Comment\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.commentText),expression:\"commentText\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Comment Here\",\"id\":\"content\",\"rows\":\"10\"},domProps:{\"value\":(_vm.commentText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.commentText=$event.target.value}}})]),_c('button',{staticClass:\"mx-3 btn btn-success\",on:{\"click\":function($event){$event.preventDefault();return _vm.addComment($event)}}},[_vm._v(\"Add Comment\")])])],2),_c('div',{staticClass:\"col-3\"},[_vm._l((_vm.labels),function(label,index){return _c('button',{staticClass:\"my-3 d-block btn btn-primary\",on:{\"click\":function($event){_vm.toggleLabel (label.added, label.labelId, index)}}},[_vm._v(_vm._s(label.title))])}),_c('hr'),_c('p',{staticClass:\"mt-5\"},[_vm._v(\"New Label\")]),_c('div',{staticClass:\"row\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.newLabel),expression:\"newLabel\",modifiers:{\"trim\":true}}],staticClass:\"col-8 form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"New Label\",\"aria-label\":\"New Label\",\"aria-describedby\":\"button-addon2\"},domProps:{\"value\":(_vm.newLabel)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.addLabel($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.newLabel=$event.target.value.trim()},\"blur\":function($event){return _vm.$forceUpdate()}}}),_c('button',{staticClass:\"btn btn-success\",attrs:{\"type\":\"button\",\"id\":\"button-addon2\"},on:{\"click\":_vm.addLabel}},[_vm._v(\"Submit\")])]),_c('p',{staticClass:\"mt-5\"},[_vm._v(\"Edit Label\")]),_vm._l((_vm.labels),function(label,index){return [_c('button',{staticClass:\"my-3 d-block btn btn-warning\",on:{\"click\":function($event){_vm.editLabel (label.labelId, index)}}},[_vm._v(_vm._s(label.title))]),(label.editMode === true)?_c('div',{staticClass:\"text-left\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.updateLabelTitle),expression:\"updateLabelTitle\",modifiers:{\"trim\":true}}],staticClass:\"mb-3 col-8 form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Update Label\",\"aria-label\":\"Update Label\",\"aria-describedby\":\"button-addon2\"},domProps:{\"value\":(_vm.updateLabelTitle)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }_vm.updateLabel (label.labelId, index)},\"input\":function($event){if($event.target.composing){ return; }_vm.updateLabelTitle=$event.target.value.trim()},\"blur\":function($event){return _vm.$forceUpdate()}}}),_c('button',{staticClass:\"btn btn-success\",attrs:{\"type\":\"button\",\"id\":\"button-addon2\"},on:{\"click\":function($event){_vm.updateLabel (label.labelId, index)}}},[_vm._v(\"Submit\")]),_c('button',{staticClass:\"ml-3 btn btn-danger\",attrs:{\"type\":\"button\",\"id\":\"button-addon2\"},on:{\"click\":function($event){_vm.cancelUpdate (index)}}},[_vm._v(\"Cancel\")])]):_vm._e()]})],2)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container my-4\">\r\n\r\n    <h3 class=\"my-5 text-left\">\r\n      <router-link :to=\"{ name: 'organization'}\" tag=\"a\" active-class=\"active\">\r\n        <a>{{ orgData.orgName }}</a>\r\n      </router-link> / \r\n\r\n      <router-link :to=\"{ name: 'project'}\" tag=\"a\" active-class=\"active\">\r\n        <a>{{ proData.proName }}</a>\r\n      </router-link>\r\n    </h3>\r\n\r\n    <div class=\"row\" v-if=\"editTitle === false\">\r\n      <h3 class=\"text-left\">{{ title }} - Created by {{ creator }}</h3>\r\n      <button class=\"btn btn-warning ml-5\" @click=\"editTitle = true\">Edit Title</button>\r\n    </div>\r\n\r\n    <div v-else class=\"row\">\r\n\r\n      <input @keyup.enter=\"changeTitle\" v-model=\"stashTitle\" type=\"text\" class=\"col-6 form-control\" placeholder=\"New Title\" aria-label=\"New Title\" aria-describedby=\"button-addon2\">\r\n\r\n      <button @click=\"changeTitle\" class=\"ml-3 btn btn-success\" type=\"button\" id=\"button-addon2\">Submit</button>\r\n      <button @click=\"cancelChange\" class=\"ml-3 btn btn-danger\" type=\"button\" id=\"button-addon2\">Cancel</button>\r\n      \r\n    </div>\r\n\r\n    \r\n    <div class=\"row\">\r\n      <span v-for=\"label in labels\" class=\"py-2 px-3 mx-1 badge badge-primary\" v-if=\"label.added === true\">{{ label.title }}</span>\r\n    </div>\r\n    <hr />\r\n    \r\n    <div class=\"row\">\r\n\r\n      <div class=\"col-9\">\r\n\r\n        <div class=\"row mb-3\">\r\n          <p class=\"text-left mb-0\">\r\n            Commented by <span class=\"font-weight-bold\">{{ creator }}</span>\r\n          </p>\r\n\r\n          <button v-if=\"editing === false && creatorId === userId\" class=\"ml-auto mr-5 btn btn-warning\" @click=\"editIssueContent\">Edit</button>\r\n        </div>\r\n\r\n        <form v-if=\"editing === true\" class=\"mx-auto my-5\">\r\n\r\n          <div class=\"form-group text-left\">\r\n            <label @keyup.enter=\"newContent\" for=\"stashIssueContent\">Comment</label>\r\n            <textarea v-model=\"stashIssueContent\" placeholder=\"Comment Here\" class=\"form-control\" id=\"stashIssueContent\" rows=\"10\"></textarea>\r\n          </div>\r\n\r\n          <button @click.prevent=\"newContent\" class=\"mx-3 btn btn-success\">Submit</button>\r\n          <button @click.prevent=\"cancelEdit\" class=\"mx-3 btn btn-danger\">Cancel</button>\r\n\r\n        </form>\r\n\r\n\r\n        <vue-markdown v-if=\"content.length > 0\" class=\"p-4 border border-success text-left\" :source=\"content\"></vue-markdown>\r\n        <p v-else class=\"p-4 border border-success text-left font-italic\">No description provided.</p>\r\n\r\n\r\n        <!-- Comment -->\r\n\r\n\r\n        <div class=\"mt-5\" v-for=\"(comment, index) in comments\">\r\n          <div class=\"row mb-3\">\r\n            <p class=\"text-left mb-0\">\r\n              Commented by <span class=\"font-weight-bold\">{{ comment.commentor }}</span>\r\n            </p>\r\n            <div v-if=\"comment.userId === userId\" class=\"row ml-auto mr-5\">\r\n              <button class=\"btn mr-3 btn-warning\" @click=\"editComment (comment.commentId, index)\">Edit</button>\r\n              <button class=\"btn btn-danger\" @click=\"deleteComment (comment.commentId, index)\">Delete</button>\r\n            </div>\r\n          </div>\r\n\r\n          <vue-markdown v-if=\"comment.commentEditing === false\" class=\"p-4 border border-success text-left\" :source=\"comment.content\"></vue-markdown>\r\n\r\n          <form v-else class=\"mx-auto my-5\">\r\n\r\n            <div class=\"form-group text-left\">\r\n              <label for=\"commentContent\">Edit Comment</label>\r\n              <textarea v-model=\"stashComment\" placeholder=\"Comment Here\" class=\"form-control\" id=\"commentContent\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button @click.prevent=\"editedComment (comment.commentId, index)\" class=\"mx-3 btn btn-success\">Submit</button>\r\n            <button @click.prevent=\"cancelEditComment (index)\" class=\"mx-3 btn btn-danger\">Cancel</button>\r\n\r\n          </form>\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <form class=\"mx-auto my-5\">\r\n\r\n          <div class=\"form-group text-left\">\r\n            <label for=\"content\">New Comment</label>\r\n            <textarea v-model=\"commentText\" placeholder=\"Comment Here\" class=\"form-control\" id=\"content\" rows=\"10\"></textarea>\r\n          </div>\r\n          <button @click.prevent=\"addComment\" class=\"mx-3 btn btn-success\">Add Comment</button>\r\n\r\n        </form>\r\n        \r\n      </div>\r\n    \r\n      <!-- Toggle Label -->\r\n      <!-- Add or Remove Label -->\r\n\r\n      <div class=\"col-3\">\r\n\r\n        <button v-for=\"(label, index) in labels\" @click=\"toggleLabel (label.added, label.labelId, index)\" class=\"my-3 d-block btn btn-primary\">{{ label.title }}</button>\r\n        <hr />\r\n\r\n\r\n        <!-- New / Edit Label -->\r\n      \r\n        <p class=\"mt-5\">New Label</p>\r\n        <div class=\"row\">\r\n          <input @keyup.enter=\"addLabel\" v-model.trim=\"newLabel\" type=\"text\" class=\"col-8 form-control\" placeholder=\"New Label\" aria-label=\"New Label\" aria-describedby=\"button-addon2\">\r\n\r\n          <button @click=\"addLabel\" class=\"btn btn-success\" type=\"button\" id=\"button-addon2\">Submit</button>\r\n        </div>\r\n        \r\n        <p class=\"mt-5\">Edit Label</p>\r\n        <template v-for=\"(label, index) in labels\">\r\n        \r\n          <button @click=\"editLabel (label.labelId, index)\" class=\"my-3 d-block btn btn-warning\">{{ label.title }}</button>\r\n\r\n          <div class=\"text-left\" v-if=\"label.editMode === true\">\r\n            <input @keyup.enter=\"updateLabel (label.labelId, index)\" v-model.trim=\"updateLabelTitle\" type=\"text\" class=\"mb-3 col-8 form-control\" placeholder=\"Update Label\" aria-label=\"Update Label\" aria-describedby=\"button-addon2\">\r\n\r\n            <button @click=\"updateLabel (label.labelId, index)\" class=\"btn btn-success\" type=\"button\" id=\"button-addon2\">Submit</button>\r\n            <button @click=\"cancelUpdate (index)\" class=\"ml-3 btn btn-danger\" type=\"button\" id=\"button-addon2\">Cancel</button>\r\n          </div>\r\n        </template>\r\n      \r\n      </div>\r\n      \r\n    </div>\r\n\r\n  </div>\r\n    \r\n\r\n</template>\r\n\r\n<script>\r\n  import Parse from \"parse\";\r\n  import VueMarkdown from \"vue-markdown\";\r\n\r\n\r\n  export default {\r\n    \r\n\r\n    name: 'issue',\r\n\r\n\r\n    components: {\r\n      VueMarkdown,\r\n    },\r\n\r\n\r\n    data () {\r\n      return {\r\n        content: '',\r\n        title: '',\r\n        editTitle: false,\r\n        stashTitle: '',\r\n        creatorId: '',\r\n        creator: '',\r\n        commentor: '',\r\n        comments: [],\r\n        commentText: '',\r\n        labels: [],\r\n        label: [],\r\n        newLabel : '',\r\n        updateLabelTitle: '',\r\n        editing: false,\r\n        stashIssueContent : '',\r\n        orgData: '',\r\n        proData: '',\r\n      }\r\n    },\r\n\r\n\r\n    created () {\r\n      // Add Label\r\n\r\n      // let Label = Parse.Object.extend (\"Label\");\r\n      // let label = new Label ();\r\n\r\n      // label.set ('title', 'Feature');\r\n      // label.set ('title', 'Bug');\r\n      // label.set ('title', 'Hotfix');\r\n      // label.set ('title', 'Enhancement');\r\n      // label.set ('title', 'Done');\r\n\r\n      // label.save()\r\n      //   .then((label) => {\r\n      //     alert('New object created with objectId: ' + label.id);\r\n      //   }, (error) => {\r\n      //     // Execute any logic that should take place if the save fails.\r\n      //     // error is a Parse.Error with an error code and message.\r\n      //     alert('Failed to create new object, with error code: ' + error.message);\r\n      //   });\r\n    },\r\n\r\n\r\n    computed: {\r\n      userId () {\r\n        return this.$store.state.user.input.userId;\r\n      },\r\n\r\n      \r\n      issueId () {\r\n        return this.$route.params.issueId; \r\n      },\r\n\r\n    },\r\n\r\n\r\n    mounted () {\r\n      this.showIssueInfo ();\r\n      this.allLabel ();\r\n      this.showComment ();\r\n\r\n    },\r\n\r\n\r\n    methods: {\r\n\r\n      \r\n      showIssueInfo () {\r\n\r\n        let $vmc = this;\r\n        let ary = [];\r\n        let orgData = {};\r\n        let proData = {};\r\n\r\n        let Issue = Parse.Object.extend ('Issue');\r\n        let query = new Parse.Query (Issue);\r\n        query.get ($vmc.issueId)\r\n          .then (resp => {\r\n            $vmc.title = resp.get ('name');\r\n            $vmc.creatorId = resp.get ('creatorId');\r\n            $vmc.creator = resp.get ('creator');\r\n            $vmc.content = resp.get ('content');\r\n\r\n            orgData.orgId = resp.get ('orgId');\r\n            orgData.orgName = resp.get ('orgName');\r\n            $vmc.orgData = orgData;\r\n            proData.proId = resp.get ('proId');\r\n            proData.proName = resp.get ('proName');\r\n            $vmc.proData = proData;\r\n          });\r\n          \r\n      },\r\n\r\n      \r\n      addComment () {\r\n        let $vmc = this;\r\n        let Comment = Parse.Object.extend ('Comment');\r\n        let comment = new Comment ();\r\n\r\n        comment.set ('content', $vmc.commentText);\r\n        comment.set ('issueId', $vmc.issueId);\r\n        comment.set ('commentor', $vmc.$store.state.user.username);\r\n        comment.set ('userId', $vmc.$store.state.user.input.userId);\r\n\r\n        comment.save ()\r\n          .then (resp => {\r\n            $vmc.commentText = '';\r\n            $vmc.showComment ();\r\n          }, (error) => {\r\n            // Execute any logic that should take place if the save fails.\r\n            // error is a Parse.Error with an error code and message.\r\n            alert('Failed to create new object, with error code: ' + error.message);\r\n          });\r\n      },\r\n\r\n\r\n      allLabel () {\r\n        let $vmc = this;\r\n        let Label = Parse.Object.extend (\"Label\");\r\n        let query = new Parse.Query (Label);\r\n        let ary = [];\r\n        query.notEqualTo (\"title\", \"\");\r\n        query.find ()\r\n          .then (resp => {\r\n            for (let i = 0; i < resp.length; i++) {\r\n              let obj = {};\r\n              let object = resp[i];\r\n              obj.labelId = object.id;\r\n              obj.title = object.get ('title');\r\n              obj.added = false;\r\n              obj.editMode = false;\r\n              ary.push (obj);\r\n\r\n              let arry = [];\r\n              let query = new Parse.Query (Label);\r\n              query.equalTo ('issueId', $vmc.issueId);\r\n              query.find ()\r\n                .then (resp => {\r\n                  for (let i = 0; i < resp.length; i ++) {\r\n                    let obj = {};\r\n                    let object = resp[i];\r\n                    for (let i = 0; i < $vmc.labels.length; i ++) {\r\n                      if ($vmc.labels[i].labelId === object.id) {\r\n                        $vmc.labels[i].added = true;\r\n                        arry.push ($vmc.labels[i]);\r\n                      }\r\n                    }\r\n                  }\r\n                })\r\n              $vmc.label = arry;\r\n            }\r\n          });\r\n        $vmc.labels = ary;\r\n      },\r\n\r\n\r\n      showComment () {\r\n        let $vmc = this;\r\n        let ary = [];\r\n        let Comment = Parse.Object.extend ('Comment');\r\n        let query = new Parse.Query (Comment);\r\n        query.equalTo ('issueId', $vmc.issueId);\r\n        query.find ()\r\n          .then (resp => {\r\n            for (let i = 0; i < resp.length; i ++) {\r\n              let obj = {};\r\n              let object = resp[i];\r\n              obj.commentId = object.id;\r\n              obj.content = object.get ('content');\r\n              obj.userId = object.get ('userId');\r\n              obj.commentor = object.get ('commentor');\r\n              obj.commentEditing = false;\r\n              obj.stashComment = '';\r\n              ary.push (obj);\r\n            }\r\n          });\r\n          $vmc.comments = ary;\r\n\r\n      },\r\n\r\n\r\n      toggleLabel (added, labelId, index) {\r\n        let $vmc = this;\r\n        \r\n        $vmc.labels[index].added = !$vmc.labels[index].added;\r\n\r\n        if ($vmc.labels[index].added === true) {\r\n          let Label = Parse.Object.extend (\"Label\");\r\n          let query = new Parse.Query (Label);\r\n        \r\n          query.get (labelId)\r\n            .then (resp => {\r\n              resp.addUnique ('issueId', $vmc.issueId);\r\n              resp.save ();\r\n            });\r\n        } else {\r\n          let Label = Parse.Object.extend (\"Label\");\r\n          let query = new Parse.Query (Label);\r\n          query.get (labelId)\r\n            .then (resp => {\r\n              resp.remove (\"issueId\", $vmc.issueId);\r\n              resp.save ();\r\n            });\r\n        }\r\n          \r\n      },\r\n\r\n\r\n      addLabel () {\r\n        let $vmc = this;\r\n        var Label = Parse.Object.extend ('Label');\r\n        var label = new Label ();\r\n\r\n        label.set ('title', $vmc.newLabel);\r\n        label.set ('issueId', []);\r\n        $vmc.newLabel = '';\r\n\r\n        label.save ()\r\n          .then (resp => {\r\n            // Execute any logic that should take place after the object is saved.\r\n            $vmc.allLabel ();\r\n            alert ('New object created with objectId: ' + resp.id);\r\n          }, (error) => {\r\n            // Execute any logic that should take place if the save fails.\r\n            // error is a Parse.Error with an error code and message.\r\n            alert ('Failed to create new object, with error code: ' + error.message);\r\n          });\r\n      },\r\n\r\n\r\n      editLabel (labelId, index) {\r\n        let $vmc = this;\r\n\r\n        for (let i = 0; i < $vmc.labels.length; i ++) {\r\n          $vmc.labels[i].editMode = false;\r\n        }\r\n\r\n        $vmc.labels[index].editMode = true;\r\n\r\n      },\r\n\r\n\r\n      updateLabel (labelId, index) {\r\n        let $vmc = this;\r\n        let Label = Parse.Object.extend ('Label');\r\n        let query = new Parse.Query (Label);\r\n\r\n        $vmc.labels[index].title = $vmc.updateLabelTitle;\r\n        query.get (labelId)\r\n          .then (resp => {\r\n            // Now let's update it with some new data. In this case, only cheatMode and score\r\n            // will get sent to the cloud. playerName hasn't changed.\r\n            resp.set ('title', $vmc.updateLabelTitle);\r\n            resp.save ()\r\n              .then (() => {\r\n                $vmc.updateLabelTitle = '';\r\n                $vmc.labels[index].editMode = false;\r\n              });\r\n            \r\n          }, (error) => {\r\n            // The object was not retrieved successfully.\r\n            // error is a Parse.Error with an error code and message.\r\n          });\r\n        $vmc.showIssueInfo ();\r\n      },\r\n\r\n\r\n      cancelUpdate (index) {\r\n        let $vmc = this;\r\n        $vmc.updateLabelTitle = '';\r\n        $vmc.labels[index].editMode = false;\r\n        \r\n      },\r\n\r\n\r\n      changeTitle () {\r\n        let $vmc = this;\r\n        $vmc.title = $vmc.stashTitle;\r\n        $vmc.editTitle = false;\r\n\r\n        let Issue = Parse.Object.extend (\"Issue\");\r\n        let query = new Parse.Query (Issue);\r\n        \r\n        query.get ($vmc.issueId)\r\n        .then (resp => {\r\n          resp.set ('name', $vmc.title);\r\n          return resp.save();\r\n          // The object was retrieved successfully.\r\n        }, (error) => {\r\n          // The object was not retrieved successfully.\r\n          // error is a Parse.Error with an error code and message.\r\n        });\r\n      },\r\n\r\n\r\n      cancelChange () {\r\n        let $vmc = this;\r\n        $vmc.stashTitle = '';\r\n        $vmc.editTitle = false;\r\n      },\r\n\r\n\r\n      editIssueContent () {\r\n        let $vmc = this;\r\n        $vmc.editing = true;\r\n        $vmc.stashIssueContent = $vmc.content;\r\n      },\r\n\r\n\r\n      newContent () {\r\n        let $vmc = this;\r\n        $vmc.content = $vmc.stashIssueContent;\r\n\r\n        let Issue = Parse.Object.extend ('Issue');\r\n        let query = new Parse.Query (Issue);\r\n        query.get ($vmc.issueId)\r\n          .then (resp => {\r\n            resp.set ('content', $vmc.content);\r\n            return resp.save ();\r\n          })\r\n        \r\n\r\n        $vmc.editing = false;\r\n      },\r\n\r\n\r\n      cancelEdit () {\r\n        let $vmc = this;\r\n        $vmc.stashIssueContent = $vmc.content;\r\n        $vmc.editing = false;\r\n      },\r\n\r\n\r\n      editComment (commentId, index) {\r\n        let $vmc = this;\r\n        $vmc.comments[index].commentEditing = true;\r\n        $vmc.stashComment = $vmc.comments[index].content;\r\n      },\r\n\r\n\r\n      editedComment (commentId, index) {\r\n        let $vmc = this;\r\n        $vmc.comments[index].content = $vmc.stashComment;\r\n        $vmc.comments[index].commentEditing = false;\r\n\r\n        let Comment = Parse.Object.extend ('Comment');\r\n        let query = new Parse.Query (Comment);\r\n        \r\n        query.get (commentId)\r\n        .then (resp => {\r\n          resp.set ('content', $vmc.stashComment);\r\n          return resp.save();\r\n          // The object was retrieved successfully.\r\n        }, (error) => {\r\n          // The object was not retrieved successfully.\r\n          // error is a Parse.Error with an error code and message.\r\n        });\r\n      },\r\n\r\n\r\n      cancelEditComment (index) {\r\n        let $vmc = this;\r\n        $vmc.comments[index].commentEditing = false;\r\n      },\r\n\r\n\r\n      deleteComment (commentId, index) {\r\n        let $vmc = this;\r\n        let Comment = Parse.Object.extend ('Comment');\r\n        let query = new Parse.Query (Comment);\r\n        query.get (commentId)\r\n        .then (resp => {\r\n          if (confirm ('確定刪除此評論？')) {\r\n            resp.destroy ()\r\n            .then (() => {\r\n              $vmc.showComment ();\r\n            })\r\n          }\r\n          else return;\r\n          \r\n          // The object was retrieved successfully.\r\n        }, (error) => {\r\n          // The object was not retrieved successfully.\r\n          // error is a Parse.Error with an error code and message.\r\n        });\r\n      },\r\n\r\n    },\r\n\r\n\r\n    watch: {\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  \r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./issue.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./issue.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./issue.vue?vue&type=template&id=3e30749e&scoped=true&\"\nimport script from \"./issue.vue?vue&type=script&lang=js&\"\nexport * from \"./issue.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3e30749e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}